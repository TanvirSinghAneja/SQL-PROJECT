-- DATA CLEANING

-- RAW DATA
SELECT *
FROM LAYOFFS;

-- CHECKING THE DATA TYPES
DESCRIBE LAYOFFS;


-- STEP 1 => REMOVING THE DUPLICATES

-- CREATING A NEW TABLE FOR THE DATA CLEANING
-- ADDING A ROW TO FIND AND REMOVE DUPLICATES
CREATE TABLE `layoffs_use` (
  `company` text,
  `location` text,
  `industry` text,
  `total_laid_off` int DEFAULT NULL,
  `percentage_laid_off` text,
  `date` text,
  `stage` text,
  `country` text,
  `funds_raised_millions` int DEFAULT NULL,
  `R_NO` INT
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- FINDING DUPLICATES USING ROW_NUMBER
INSERT INTO LAYOFFS_USE
SELECT *,
ROW_NUMBER() OVER(
	PARTITION BY COMPANY,LOCATION,INDUSTRY,TOTAL_LAID_OFF,
    PERCENTAGE_LAID_OFF,`DATE`,STAGE,COUNTRY,FUNDS_RAISED_MILLIONS)
FROM LAYOFFS;

-- WILL SHOW ALL DUPLICATES
SELECT *
FROM LAYOFFS_USE
WHERE R_NO>1;
-- CASPER, CAZOO, HIBOB, WILDLIFE STUDIOS, YAHOO

-- VERIFYING THE DUPLICATE VALUES
SELECT *
FROM LAYOFFS_USE
WHERE COMPANY IN ('CASPER','CAZOO','HIBOB','WILDLIFE STUDIOS','YAHOO');

-- DELETING THE DUPLICATE VALUES
DELETE
FROM LAYOFFS_USE
WHERE R_NO>1;


-- STEP 2 => STANDARDISING THE DATA 

-- CHECKING ALL COULUMNS
-- COMPANY,LOCATION,INDUSTRY,TOTAL_LAID_OFF,PERCENTAGE_LAID_OFF
-- `DATE`,STAGE,COUNTRY,FUNDS_RAISED_MILLIONS

SELECT DISTINCT(COMPANY)
FROM LAYOFFS_USE
ORDER BY 1;
-- UPDATING CERTAIN VALUES WHICH HAD UNNESSECARY SPACES
UPDATE LAYOFFS_USE
SET COMPANY=TRIM(COMPANY);

SELECT DISTINCT(LOCATION)
FROM LAYOFFS_USE
ORDER BY 1;
-- NO ISSUES IN THE LOCATION

SELECT DISTINCT(INDUSTRY)
FROM LAYOFFS_USE
ORDER BY 1;

-- CRYPTO HAD 3 VALUES CRYPTO,CRYPTOCURRENCY AND CRYPTO CURRENCY
SELECT *
FROM LAYOFFS_USE
WHERE INDUSTRY LIKE "CRYPTO%";
-- ALL MEAN THE SAME SO UPDATING IT
UPDATE LAYOFFS_USE
SET INDUSTRY = "Crypto"
WHERE INDUSTRY LIKE "CRYPTO%";

-- REPLACING THE BLANK VALUES WITH NULL TO MAKE CLEANING SIMPLER
UPDATE LAYOFFS_USE
SET INDUSTRY=NULL
WHERE INDUSTRY='';

SELECT DISTINCT(COUNTRY)
FROM LAYOFFS_USE
ORDER BY 1;
-- RECTIFYING 'UNITED STATES.' BY REMOVING '.' FROM THE END
UPDATE LAYOFFS_USE
SET COUNTRY ="United States"
WHERE COUNTRY LIKE "UNITED STATES%";

-- DATE IS IN WRONG FORMAT, SO TO RECTIFY IT, WE FIRST CHECK
-- IF THE DATE IS IN %/%/% FORMAT WE CONVERT IT TO THE SPECIFIED FORMAT
-- IF THE DATE IS IN %-%-% FORMAT WE CONVERT IT TO THE SPECIFIED FORMAT
SELECT `DATE`,
CASE
	WHEN `DATE` LIKE '%/%/%' THEN
		str_to_date(`DATE`,'%m/%d/%Y')
	WHEN `DATE` LIKE '%-%-%' THEN
		str_to_date(`DATE`,'%m-%d-%Y')
	ELSE NULL 
END AS DATE_FORMAT
FROM LAYOFFS_USE;
-- WE UPDATE THE DATE FORMAT
UPDATE LAYOFFS_USE
SET DATE=(	CASE
				WHEN `DATE` LIKE '%/%/%' THEN
					str_to_date(`DATE`,'%m/%d/%Y')
				WHEN `DATE` LIKE '%-%-%' THEN
					str_to_date(`DATE`,'%m-%d-%Y')
				ELSE NULL 
			END);
-- WE UPDATE DATE COLUMN FROM TEXT TO DATE
ALTER TABLE LAYOFFS_USE
modify COLUMN `DATE` DATE;


-- STEP 3=> DEALING WITH NULL VALUES

-- CHECHKING FOR NULL IN INDUSTRY COLUMN
SELECT *
FROM LAYOFFS_USE
WHERE INDUSTRY IS NULL;
-- AIRBNB, BALLY'S INTERACTIVE, CARVANA, JUUL
-- CHECKING THE NULL
SELECT *
FROM LAYOFFS_USE
WHERE COMPANY IN ("AIRBNB","BALLY'S INTERACTIVE","CARVANA","JUUL");

-- CHECKING IF THE NULL VALUES COULD BE FILLED
SELECT * 
FROM LAYOFFS_USE AS L1
JOIN LAYOFFS_USE AS L2
	ON L1.COMPANY=L2.COMPANY
    AND L1.LOCATION=L2.LOCATION
WHERE L1.INDUSTRY IS NULL
AND L2.INDUSTRY IS NOT NULL;

-- EG- AIRBNB HAS AN INDUSTRY OF TRAVEL WHICH CAN BE USED TO FILL THE NULL
SELECT L1.INDUSTRY,L2.INDUSTRY
FROM LAYOFFS_USE AS L1
JOIN LAYOFFS_USE AS L2
	ON L1.COMPANY=L2.COMPANY
    AND L1.LOCATION=L2.LOCATION
WHERE L1.INDUSTRY IS NULL
AND L2.INDUSTRY IS NOT NULL;
-- REPLACING THE NULLS WITH THE SIMILAR INDUSTRY
UPDATE LAYOFFS_USE AS L1
JOIN LAYOFFS_USE AS L2
	ON L1.COMPANY=L2.COMPANY
    AND L1.LOCATION=L2.LOCATION
SET L1.INDUSTRY=L2.INDUSTRY
WHERE L1.INDUSTRY IS NULL
AND L2.INDUSTRY IS NOT NULL;

-- THE COLUMNS MOST IMPORTANT FOR ANALYSIS HAS MULTIPLE NULLS
SELECT *
FROM LAYOFFS_USE
WHERE (TOTAL_LAID_OFF IS NULL OR TOTAL_LAID_OFF='')
AND (PERCENTAGE_LAID_OFF IS NULL OR PERCENTAGE_LAID_OFF='');

-- SINCE THESE DATA WILL NOT HELP IN ANALYSIS WE DELETE THEM
DELETE 
FROM LAYOFFS_USE
WHERE TOTAL_LAID_OFF IS NULL
AND PERCENTAGE_LAID_OFF IS NULL;

-- DROPPING UNNESSECARY COLUMNS
ALTER table LAYOFFS_USE
DROP COLUMN R_NO;


-- CLEAN DATA

SELECT *
FROM LAYOFFS_USE;